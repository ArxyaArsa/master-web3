@model Warehousing.Web.Models.DTOs.WarehouseLotDTO

@{
}

<h1>Warehouse Info</h1>

<div class="row">
    <div class="col-md-4">
        <div class="row">
            <div class="col-md-3">@Html.DisplayNameFor(x => x.Name):</div>
            <div class="col-md-9">@Html.DisplayFor(x => x.Name)</div>
        </div>
        <div class="row">
            <div class="col-md-3">@Html.DisplayNameFor(x => x.Description):</div>
            <div class="col-md-9">@Html.DisplayFor(x => x.Description)</div>
        </div>
        <div class="row">
            <div class="col-md-3">@Html.DisplayNameFor(x => x.Type):</div>
            <div class="col-md-9">@Html.DisplayFor(x => x.Type)</div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="row">
            <div class="col-md-6">@Html.DisplayNameFor(x => x.Occupated):</div>
            <div class="col-md-6">@Html.DisplayFor(x => x.Occupated)</div>
        </div>
        <div class="row">
            <div class="col-md-6">@Html.DisplayNameFor(x => x.WeightCapacity):</div>
            <div class="col-md-6">@Html.DisplayFor(x => x.WeightCapacity)</div>
        </div>
        <div class="row">
            <div class="col-md-6">@Html.DisplayNameFor(x => x.LastInventoryChange):</div>
            <div class="col-md-6">@Html.DisplayFor(x => x.LastInventoryChange)</div>
        </div>
        <div class="row">
            <div class="col-md-6">@Html.DisplayNameFor(x => x.ParcelCount):</div>
            <div class="col-md-6">@Html.DisplayFor(x => x.ParcelCount)</div>
        </div>
        <div class="row">
            <div class="col-md-6">@Html.DisplayNameFor(x => x.ParcelWeight):</div>
            <div class="col-md-6">@Html.DisplayFor(x => x.ParcelWeight)</div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="row"><div class="col-md-12"><p><strong>Manager Info:</strong></p></div></div>
        <div class="row">
            <div class="col-md-6">@Html.DisplayNameFor(x => x.Manager_FirstName):</div>
            <div class="col-md-6">@Html.DisplayFor(x => x.Manager_FirstName)</div>
        </div>
        <div class="row">
            <div class="col-md-6">@Html.DisplayNameFor(x => x.Manager_LastName):</div>
            <div class="col-md-6">@Html.DisplayFor(x => x.Manager_LastName)</div>
        </div>
        <div class="row">
            <div class="col-md-6">@Html.DisplayNameFor(x => x.Manager_Email):</div>
            <div class="col-md-6">@Html.DisplayFor(x => x.Manager_Email)</div>
        </div>
        <div class="row">
            <div class="col-md-6">@Html.DisplayNameFor(x => x.Manager_Phone):</div>
            <div class="col-md-6">@Html.DisplayFor(x => x.Manager_Phone)</div>
        </div>
    </div>
</div>

<h1>Warehouse Parcels</h1>

<div class="row">
    <div class="col-md-12">
        <div class="row wh-parcels-table-container">
            <table class="wh-parcels-table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Contract Name</th>
                        <th>Parcel Type Name</th>
                        <th>Weight (kg)</th>
                        <th>Add Date</th>
                        <th>Valid Until</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>

            <div class="clearfix"></div>
            <div class="overlay table-overlay" style="display: none"><i class="fa fa-refresh fa-spin"></i></div>
            <div class="clearfix"></div>
        </div>
    </div>
</div>

@{
    string modalClass = "warehouse-parcel-modal-class";
    await Html.RenderPartialAsync("~/Views/Shared/_Modal.cshtml", new ModalViewModel()
    {
        UniqueClass = modalClass
    });
}

@section styles {
<style>
    .wh-parcels-table-container .overlay.table-overlay {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: rgb(244,244,244,0.7);
    }

    .wh-parcels-table-container {
        position: relative;
    }

    .wh-parcels-table-container .dataTables_processing {
        display: none !important;
    }

    .wh-parcels-table-container .overlay.table-overlay .fa-refresh {
        position: absolute;
        left: 50%;
        top: 50%;
        font-size: 50px;
        z-index: 100;
        margin-left: -25px;
        margin-top: -25px;
    }
</style>
}

@section scripts {
<script>
    window.Parcels = window.Parcels || (function () {
        var _selectors = {
            Table: ".wh-parcels-table-container .wh-parcels-table",
            Overlay: ".wh-parcels-table-container .overlay.table-overlay",
            AddButton: ".wh-parcels-table-container .btn-add-parcel",
            Modal: ".@(modalClass)",
            _EditButton: ".btn-edit-parcel",
            _DeleteButton: ".btn-delete-parcel"
        }

        var _table = null;
        var _warehouseId = @Html.Raw(Model.Id);

        function init() {
            fillDataTable();
            initEvents();
        }

        function initEvents() {

            $(_selectors.AddButton).on('click', function () {
                $(_selectors.Modal).data("modaljsobj").show({
                    title: "Add Parcel",
                    closeOnSave: true,
                    bodyUrl: "@Url.Action("_AddEditParcelModalBody", "Resources", new { })/0?whId=" + _warehouseId
                });
            });

            $(_selectors.Table).on('click', _selectors._EditButton, function () {
                $(_selectors.Modal).data("modaljsobj").show({
                    title: "Edit Parcel",
                    closeOnSave: true,
                    bodyUrl: "@Url.Action("_AddEditParcelModalBody", "Resources", new { })/" + $(this).data("parcel-id") + "?whId=" + _warehouseId
                });
            });

            $(_selectors.Table).on('click', _selectors._DeleteButton, function () {
                $(_selectors.Modal).data("modaljsobj").show({
                    closeOnSave: true,
                    title: "Delete Parcel",
                    //body: "Are you sure you want to delete this Parcel?",
                    bodyUrl: "@Url.Action("_DeleteParcelModalBody", "Resources", new { })/" + $(this).data("parcel-id") + "?whId=" + _warehouseId
                });
            });
        }

        function fillDataTable() {

            if (_table == null) {
                _table = $(_selectors.Table).on('preXhr.dt', function (e, settings, data) {
                    // callback before ajax call
                    $(_selectors.AddButton).prop("disabled", true);
                    $(_selectors.Overlay).show();
                }).on('xhr.dt', function (e, settings, json, xhr) {
                    // callback after ajax call

                    if ($(_selectors.AddButton).text() == "") {
                        $(_selectors.AddButton).text("Add Parcel");
                        $(_selectors.AddButton).addClass("btn");
                        $(_selectors.AddButton).addClass("btn-primary");
                    }

                    $(_selectors.AddButton).prop("disabled", false);
                    $(_selectors.Overlay).hide();

                    return xhr.responseJSON;
                }).DataTable({
                    lengthChange: true,
                    autoWidth: false,
                    processing: true,
                    serverSide: true,
                    searching: true,
                    ordering: true,
                    paging: true,
                    info: true,
                    order: [[0, "desc"]],
                    pageLength: 10,
                    searchDelay: 2000,
                    lengthMenu: [5, 10, 25, 50, 100, 250, 500],
                    dom: '<"row"<"col-sm-4"<"pull-left"<"btn-add-parcel">>><"col-sm-4"><"col-sm-4"<"pull-right"f>>>rt<"row"<"col-sm-6"i><"col-sm-6"p>><"row"<"col-sm-12"l>>',
                    ajax: {
                        url: "@Url.Action("GetParcels", "Resources")",
                        data: function (d) {
                            d.warehouseId = _warehouseId;

                            return d;
                        },
                        type: "POST"
                    },
                    language: {
                        processing: ''
                    },
                    columns: [
                        {
                            data: "name",
                            orderable: true,
                            className: "text-left",
                            render: function (data, type, full, meta) {
                                return `<span class='datacell'>${full.name}</span>`;
                            }
                        },
                        {
                            data: "contractName",
                            orderable: true,
                            className: "text-left",
                            render: function (data, type, full, meta) {

                                return `<span class='datacell'>${full.contractName}</span>`;
                            }
                        },
                        {
                            data: "parcelTypeName",
                            orderable: true,
                            className: "text-left",
                            render: function (data, type, full, meta) {
                                return `<span class='datacell'>${full.parcelTypeName}</span>`;
                            }
                        },
                        {
                            data: "weight",
                            orderable: true,
                            className: "text-left",
                            render: function (data, type, full, meta) {
                                return `<span class='datacell'>${full.weight}</span>`;
                            }
                        },
                        {
                            data: "addDate",
                            orderable: true,
                            className: "text-left",
                            render: function (data, type, full, meta) {
                                var dString = full.addDate != null ? App.formatDateTime(full.addDate) : "/";

                                return `<span class='datacell'>${dString}</span>`;
                            }
                        },
                        {
                            data: "validUntil",
                            orderable: true,
                            className: "text-left",
                            render: function (data, type, full, meta) {
                                var dString = full.validUntil != null ? App.formatDateTime(full.validUntil) : "/";

                                return `<span class='datacell'>${dString}</span>`;
                            }
                        },
                        {
                            data: "id",
                            orderable: false,
                            className: "text-left",
                            width: "250px",
                            render: function (data, type, full, meta) {
                                // action buttons
                                return `
<a class="btn btn-default pull-left" href="@Url.Action("ParcelDetails", "Resources", new { })/${full.id}">View <span class="fa fa-link"></span></a>
<button class="btn btn-primary pull-left btn-edit-parcel" data-parcel-id="${full.id}">Edit <span class="fa fa-edit"></span></button>
<button class="btn btn-primary pull-left btn-delete-parcel" data-parcel-id="${full.id}">Delete <span class="fa fa-remove"></span></button>
`;
                            }
                        }
                    ]
                });
            }
            else {
                _table.draw();
            }
        }

        return {
            init: init,
            selectors: _selectors,
            refreshTable: fillDataTable
        }
    })();

    $(document).ready(function () {
        Parcels.init();
    });
</script>
}